"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8548],{99035:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"install/install_ogrre","title":"Install OGRRE on your computer","description":"Getting started with OGRRE","source":"@site/docs/install/install_ogrre.mdx","sourceDirName":"install","slug":"/install/install_ogrre","permalink":"/orphaned-wells-ui-doc/docs/install/install_ogrre","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"description":"Getting started with OGRRE","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Create and connect MongoDB database","permalink":"/orphaned-wells-ui-doc/docs/install/database_setup"},"next":{"title":"Connect trained processors to OGRRE","permalink":"/orphaned-wells-ui-doc/docs/install/connect_processors"}}');var o=t(74848),s=t(28453);const i={description:"Getting started with OGRRE",sidebar_position:3},a="Install OGRRE on your computer",l={},c=[{value:"Install frontend",id:"install-frontend",level:2},{value:"1. Clone Repository",id:"1-clone-repository",level:3},{value:"2. Install Javascript dependencies",id:"2-install-javascript-dependencies",level:3},{value:"3. Set required environment variables.",id:"3-set-required-environment-variables",level:3},{value:"4. Run UI in browser",id:"4-run-ui-in-browser",level:3},{value:"Install backend",id:"install-backend",level:2},{value:"1. Clone Repository",id:"1-clone-repository-1",level:3},{value:"2. Create conda environment and install Python dependencies.",id:"2-create-conda-environment-and-install-python-dependencies",level:3},{value:"3. Set required environment variables.",id:"3-set-required-environment-variables-1",level:3},{value:"4. Start the backend server",id:"4-start-the-backend-server",level:3},{value:"Ensure that the <code>uow-server-env</code> Conda environment is active",id:"ensure-that-the-uow-server-env-conda-environment-is-active",level:4},{value:"Start server on port 8001",id:"start-server-on-port-8001",level:4}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"install-ogrre-on-your-computer",children:"Install OGRRE on your computer"})}),"\n",(0,o.jsxs)(n.p,{children:["In addition to the frontend and backend code, OGRRE relies on a Mongo database and Google Cloud Platform. Before attempting to run OGRRE, follow the previous setup tutorials to learn how to ",(0,o.jsx)(n.a,{href:"database_setup",children:"set up MongoDB"})," and ",(0,o.jsx)(n.a,{href:"gcp_setup",children:"configure GCP"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"install-frontend",children:"Install frontend"}),"\n",(0,o.jsx)(n.h3,{id:"1-clone-repository",children:"1. Clone Repository"}),"\n",(0,o.jsxs)(n.p,{children:["Clone the frontend repository (",(0,o.jsx)(n.a,{href:"https://github.com/CATALOG-Historic-Records/orphaned-wells-ui",children:"https://github.com/CATALOG-Historic-Records/orphaned-wells-ui"}),") and navigate to the root of the repository."]}),"\n",(0,o.jsx)(n.h3,{id:"2-install-javascript-dependencies",children:"2. Install Javascript dependencies"}),"\n",(0,o.jsxs)(n.p,{children:["Prerequisites: Node Package Manager (npm). See ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/",children:"https://www.npmjs.com/"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-console",children:"cd <orphaned-wells-ui-path>\r\nnpm clean-install\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-set-required-environment-variables",children:"3. Set required environment variables."}),"\n",(0,o.jsxs)(n.p,{children:["The frontend relies on a set of environment variables to determine which backend to connect to, which google client to use, and more. The following variables should be defined in a file called ",(0,o.jsx)(n.code,{children:".env"})," at the root of the frontend project."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"REACT_APP_BACKEND_URL"}),': The backend URL to connect to. If running the backend locally, this is likely going to be "',(0,o.jsx)(n.a,{href:"http://localhost:8001",children:"http://localhost:8001"}),'". If running from a server with a dedicated IP/URL, use the proper address here.']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"REACT_APP_GOOGLE_CLIENTID"}),": The Google Client ID that is provided when using Google's OAuth service. This is necessary for frontend authentication. For more information, see the ",(0,o.jsx)(n.a,{href:"gcp_setup#setting-up-a-gcp-project",children:"GCP section on OAuth"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"4-run-ui-in-browser",children:"4. Run UI in browser"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-console",children:"cd <orphaned-wells-ui-path>\r\nnpm start\n"})}),"\n",(0,o.jsx)(n.h2,{id:"install-backend",children:"Install backend"}),"\n",(0,o.jsx)(n.h3,{id:"1-clone-repository-1",children:"1. Clone Repository"}),"\n",(0,o.jsxs)(n.p,{children:["Clone the frontend repository (",(0,o.jsx)(n.a,{href:"https://github.com/CATALOG-Historic-Records/orphaned-wells-ui-server",children:"https://github.com/CATALOG-Historic-Records/orphaned-wells-ui-server"}),") and navigate to the root of the repository."]}),"\n",(0,o.jsx)(n.h3,{id:"2-create-conda-environment-and-install-python-dependencies",children:"2. Create conda environment and install Python dependencies."}),"\n",(0,o.jsxs)(n.p,{children:["Prerequisites: Python and conda. For more information on these see the ",(0,o.jsx)(n.a,{href:"https://www.python.org/",children:"Python"})," and ",(0,o.jsx)(n.a,{href:"https://anaconda.org/anaconda/conda",children:"anaconda"})," webpages."]}),"\n",(0,o.jsxs)(n.p,{children:["Run the following command to create and activate a new Conda environment named ",(0,o.jsx)(n.code,{children:"uow-server-env"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"conda env create --file environment.yml && conda activate uow-server-env\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This will install the correct runtime versions of the backend (Python) and the backend dependencies.",(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.br,{}),"\n","Alternatively, if you already have an environment that you would like to install the dependencies in,\r\nactivate your environment and run the command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"pip install .\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-set-required-environment-variables-1",children:"3. Set required environment variables."}),"\n",(0,o.jsxs)(n.p,{children:["The backend relies on a set of environment variables to determine which database to connect to, which google cloud project to use, and more. The following variables should be defined in a file called ",(0,o.jsx)(n.code,{children:".env"})," inside ",(0,o.jsx)(n.code,{children:"app/internal"}),"."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"ENVIRONMENT"}),': The project or collaborator that this instance is designed for. Each collaborator has their own set of trained processors, and OGRRE uses this variable to determine which processors to look for. For example, "isgs".']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"LOCATION"}),': The Google Cloud location. For example: "us".']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"DB_USERNAME"}),": MongoDB database username. For more information, see the ",(0,o.jsx)(n.a,{href:"database_setup#create-a-mongodb-database",children:"section on creating a MongoDB database user"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"DB_PASSWORD"}),": MongoDB database user password. For more information, ",(0,o.jsx)(n.a,{href:"database_setup#create-a-mongodb-database",children:"section on creating a MongoDB database user"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"DB_CONNECTION"}),": MongoDB database connection string. For more information, see the ",(0,o.jsx)(n.a,{href:"database_setup#create-a-mongodb-database",children:"section on connecting to a MongoDB instance"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"DB_NAME"}),": MongoDB database name."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"STORAGE_BUCKET_NAME"}),": Google Cloud storage buckent name to store document files in."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"PROJECT_ID"}),": Google Cloud project ID."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"STORAGE_SERVICE_KEY"}),": The name of the file storing the Google Cloud connection credentials. For more information, see the ",(0,o.jsx)(n.a,{href:"gcp_setup#setting-up-a-gcp-project",children:"section on creating a GCP service account"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"token_uri"}),": The endpoint URL where an application requests and receives access tokens. This is necessary for user authentication. For more information, see the ",(0,o.jsx)(n.a,{href:"gcp_setup#setting-up-a-gcp-project",children:"GCP section on OAuth"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"client_id"}),": The Google Client ID that is provided when using Google's OAuth service. This is necessary for user authentication. For more information, see the ",(0,o.jsx)(n.a,{href:"gcp_setup#setting-up-a-gcp-project",children:"GCP section on OAuth"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)("b",{children:"client_secret"}),": The Google Client secret that is provided when using Google's OAuth service. This is necessary for user authentication. For more information, see the ",(0,o.jsx)(n.a,{href:"gcp_setup#setting-up-a-gcp-project",children:"GCP section on OAuth"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"4-start-the-backend-server",children:"4. Start the backend server"}),"\n",(0,o.jsxs)(n.h4,{id:"ensure-that-the-uow-server-env-conda-environment-is-active",children:["Ensure that the ",(0,o.jsx)(n.code,{children:"uow-server-env"})," Conda environment is active"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-console",children:"conda activate uow-server-env\n"})}),"\n",(0,o.jsx)(n.h4,{id:"start-server-on-port-8001",children:"Start server on port 8001"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-console",children:"cd <orphaned-wells-ui-server-path>/app && uvicorn main:app --reload --host 127.0.0.1 --port 8001\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(96540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);