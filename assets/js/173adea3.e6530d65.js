"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[842],{84534:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"install/gcp_setup","title":"Create and connect Google project","description":"Google Cloud Setup","source":"@site/docs/install/gcp_setup.mdx","sourceDirName":"install","slug":"/install/gcp_setup","permalink":"/orphaned-wells-ui-doc/docs/install/gcp_setup","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"description":"Google Cloud Setup","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/orphaned-wells-ui-doc/docs/install/"},"next":{"title":"Create and connect MongoDB database","permalink":"/orphaned-wells-ui-doc/docs/install/database_setup"}}');var r=o(74848),s=o(28453);function c(){return(0,r.jsxs)("div",{children:["OGRRE relies on ",(0,r.jsx)("a",{target:"_blank",href:"https://cloud.google.com/?hl=en",children:"Google Cloud Platform (GCP)"})," for multiple services. To process documents, OGRRE uses ",(0,r.jsx)("a",{target:"_blank",href:"https://cloud.google.com/document-ai?hl=en",children:"Document AI"}),". To store document files, OGRRE uses ",(0,r.jsx)("a",{target:"_blank",href:"https://cloud.google.com/storage?hl=en",children:"Cloud Storage"}),". To authenticate users, OGRRE uses ",(0,r.jsx)("a",{target:"_blank",href:"https://developers.google.com/identity/protocols/oauth2",children:"Google OAuth Platform"}),". It is configured to work with any Google Cloud project, as long as the proper credentials are provided. To learn how to configure OGRRE with GCP, read the following tutorials."]})}function i(){return(0,r.jsxs)("ol",{children:[(0,r.jsx)("li",{children:"Create an account: "})," To create a GCP account, you must have a Google account. Then, simply sign up on the ",(0,r.jsx)("a",{target:"_blank",href:"https://console.cloud.google.com",children:"GCP console"}),".",(0,r.jsx)("li",{children:"Create a project:"})," To create a project and grant access to it, see the ",(0,r.jsx)("a",{target:"_blank",href:"https://cloud.google.com/resource-manager/docs/creating-managing-projects",children:"Google documentation on creating and managing projects"}),".",(0,r.jsx)("li",{children:"Create a bucket:"})," OGRRE uses cloud storage buckets to store and retrieve well document image files. To create a bucket, see the ",(0,r.jsx)("a",{target:"_blank",href:"https://cloud.google.com/storage/docs/creating-buckets",children:"documentation on creating a storage bucket"}),".",(0,r.jsx)("li",{children:"Set up OAuth:"})," OGRRE relies on Google OAuth to authenticate users. To create an OAuth client, see the ",(0,r.jsx)("a",{target:"_blank",href:"https://support.google.com/cloud/answer/15544987?hl=en&ref_topic=15540269&sjid=18121873989066748574-NC",children:"documentation on using Google OAuth"}),".",(0,r.jsx)("li",{children:"Get access credentials:"}),"OGRRE requires a user account with credentials to access the GCP APIs. To create a service account, follow the ",(0,r.jsx)("a",{target:"_blank",href:"https://cloud.google.com/iam/docs/service-accounts-create",children:"documentation on creating a service account"}),". To include your service account in OGRRE, you'll want to create a JSON key file for your service account by following the ",(0,r.jsx)("a",{target:"_blank",href:"https://cloud.google.com/iam/docs/keys-create-delete",children:"documentation on creating service account keys"}),"."]})}function a(){return(0,r.jsxs)("div",{children:["The OGRRE backend requires 7 environment variables from your GCP project. As explained in the ",(0,r.jsx)("a",{href:"getting_started",children:"backend installation section"}),", the following variables must go inside your ",(0,r.jsx)("code",{children:".env"})," file.",(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"PROJECT_ID"}),": The project ID of your GCP project."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"LOCATION"}),': The location you chose for document AI processors, likely to be "us".']}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"STORAGE_BUCKET_NAME"}),": The name you chose for your storage bucket."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"STORAGE_SERVICE_KEY"}),": The name of the file storing your GCP access credentials. ",(0,r.jsxs)("b",{children:["This file should be stored in the same directory as the ",(0,r.jsx)("code",{children:".env"})," file."]})]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"token_uri"}),": The endpoint URL where an application requests and receives access tokens. This is necessary for user authentication. For more information, see the ",(0,r.jsx)("a",{target:"_blank",href:"https://developers.google.com/identity/protocols/oauth2",children:"Google's documentation on OAuth2"}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"client_id"}),": The client ID of your OAuth client."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"client_secret"}),": The client secret of your OAuth client."]})]})]})}const l={description:"Google Cloud Setup",sidebar_position:1},d="Create and connect Google project",u={},h=[{value:"Setting up a GCP project",id:"setting-up-a-gcp-project",level:2},{value:"Environment variables for OGRRE",id:"environment-variables-for-ogrre",level:2}];function g(e){const t={h1:"h1",h2:"h2",header:"header",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"create-and-connect-google-project",children:"Create and connect Google project"})}),"\n","\n",(0,r.jsx)(c,{}),"\n",(0,r.jsx)(t.h2,{id:"setting-up-a-gcp-project",children:"Setting up a GCP project"}),"\n",(0,r.jsx)(i,{}),"\n",(0,r.jsx)(t.h2,{id:"environment-variables-for-ogrre",children:"Environment variables for OGRRE"}),"\n",(0,r.jsx)(a,{})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>c,x:()=>i});var n=o(96540);const r={},s=n.createContext(r);function c(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);